name: gh.build-and-test
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image:  rust:1.43.0
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - name: Apt update
        run: apt-get update
      - name: Install postgres client
        run: apt-get install -y postgresql-client libpq-dev
      - name: Setup DB
        run: psql -f db/structure.sql --user postgres --host postgres --port 5432 postgres
        env:
          PGPASSWORD: postgres
      - name: Rustup install beta
        run: rustup toolchain install beta
      - name: Rustup use beta
        run: rustup default beta
      - name: Build main
        run: cargo build
      - name: Build worker
        run: cargo build --bin kruwk
      - name: Run tests
        run: cargo test --verbose -- --nocapture
        env:
          KRUMNET_TEST_CONFIG_FILE: ci/github-actions/krumnet-config.json
  dist:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: rust:1.43.0
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Update apt
        run: apt-get update
      - name: Install packages
        run: apt-get install -y libssl-dev postgresql-client libpq-dev gcc-arm-linux-gnueabihf
      - name: Download openssl
        run: cd /tmp && wget https://www.openssl.org/source/openssl-1.0.1t.tar.gz
      - name: Extract openssl
        run: cd /tmp && tar xzf openssl-1.0.1t.tar.gz
      - name: Configure openssl
        run: cd /tmp/openssl-1.0.1t && ./config shared
        env:
          MACHINE: armv7
          ARCH: arm
          CC: arm-linux-gnueabihf-gcc
      - name: Build openssl
        run: cd /tmp/openssl-1.0.1t && make
        env:
          MACHINE: armv7
          ARCH: arm
          CC: arm-linux-gnueabihf-gcc
      - name: Add target
        run: rustup target add armv7-unknown-linux-gnueabihf
      - name: Add target components
        run: rustup component add --target armv7-unknown-linux-gnueabihf rust-src rust-std rustc-dev
      - name: Build w/ target
        run: cargo build --target armv7-unknown-linux-gnueabihf --release
        env:
          OPENSSL_LIB_DIR: /tmp/openssl-1.0.1t/
          OPENSSL_INCLUDE_DIR: /tmp/openssl-1.0.1t/include
      - name: Prepare distributable
        run: mkdir -p target/dist/krumpled
      - name: Populate distributable (krumnet)
        run: cp target/armv7-unknown-linux-gnueabihf/release/krumnet target/dist/krumpled/krumnet
      - name: Populate distributable (kruwk)
        run: cp target/armv7-unknown-linux-gnueabihf/release/kruwk target/dist/krumpled/kruwk
      - name: Compress distributable
        run: tar cvzf ./krumpled-armv7-unknown-linux-gnueabihf.tar.gz -C target/dist krumpled
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./krumpled-armv7-unknown-linux-gnueabihf.tar.gz
          asset_name: krumpled-armv7-unknown-linux-gnueabihf.tar.gz
          asset_content_type: application/tar+gzip
